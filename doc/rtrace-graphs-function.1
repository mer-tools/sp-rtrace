.TH RTRACE-GRAPHS-FUNCTION 1 "2012-06-05" "sp-rtrace"
.SH NAME
rtrace-graphs-function - create callgraph of given function's allocs
.SH SYNOPSIS
rtrace-graphs-function [--bfd] [--root <path>] <function prefix> <limit> <rtrace traces>
.SH DESCRIPTION
\fIrtrace-graphs-function\fP generates callgraphs of resource allocation
backtraces going through the functions with given name prefix in all
given trace files. The graphs are saved to a subdirectory with a same
name.
.PP
Limit is how much of the total allocations need to go through the given
function for a function to be shown in the graphs.  Good values for
the argument are 0.1 - 5, depending on the trace file contents.
.PP
Input files can be either unprocessed binary resource traces or
already processed ASCII trace files.  Latter ones won't be
post-processed or re-resolved.
.PP
If tools needed for producing the graphs or the intermediate steps are
missing, script will just provide the input files for further steps.
.SH OPTIONS
Please see \fIrtrace-graphs-overview\fP manual page for explanation
on the \fI--bfd\fP and \fI--root\fP options affecting the trace symbol
resolving.
.SH FILES
The produced files have the same file names as input files with
following extensions appended to them:
.TP
.B -callgraph.rtrace.txt
data post-processed and resolved for \fIrtrace-calltree\fP use.
.TP
.B -callgraph.dot
GraphViz input files generated by \fIrtrace-calltree\fP.
.TP
.B -callgraph.svg
SVG callgraph files generated by \fIdot\fP from
the \fIrtrace-calltree\fP output .dot files.  These show
a general overview of the unfreed allocations.
.PP
SVG and intermediate dot files are saved to a <function name>
subdirectory in current directory and the post-processed *.rtrace.txt
trace file into same directory where the input files are (so that it's
easier to share it with \fIrtrace-graphs-overview\fP script).
.PP
To re-generated above files, just remove them or the subdirectory
and re-run the \fIrtrace-graphs-function\fP script (with new limit).
.SH DETAILS
\fIrtrace-graphs-function\fP script uses \fIsp-rtrace-postproc\fP to
remove freed allocation and to (indirectly, using \fIsp-rtrace-resolve\fP)
to resolve the addresses in backtraces to function names (if the binaries
/ libraries contain debug symbols), \fIrtrace-calltree\fP to analyse
the data and \fIdot\fP (from GraphViz) to create the graph from
the \fIrtrace-calltree\fP output.
.PP
If you want to modify what details are filtered, you can just call
\fIrtrace-calltree\fP (and \fIdot\fP) directly with options suitably
modified from the ones (shown to be) used by this script.
.SH SEE ALSO
.IR sp-rtrace (1),
.IR sp-rtrace-postproc (1),
.IR rtrace-graphs-overview (1),
.IR rtrace-calltree (1),
.IR dot (1)
.SH COPYRIGHT
Copyright (C) 2007,2010-2012 Nokia Corporation.
.PP
This is free software.  You may redistribute copies of it under the
terms of the GNU General Public License v2 included with the software.
There is NO WARRANTY, to the extent permitted by law.

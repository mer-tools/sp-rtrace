sp-rtrace (2.0), 05 Aug 2012:
  * new rtrace-start script to start sp-rtrace and traced process.
    With it, sp-rtrace is started onto background and traced process
    runs on foreground
  * sp-rtrace managed mode (-m) doesn't anymore cause the traced
    process to be fork()ed onto background and sp-rtrace exiting,
    traced process is simple exec()ed
  * As result of above two changes, traced program execution doesn't
    anymore annoyingly continue on bg (depending on which tracing mode
    is used or whether tracing is enabled) and tracing works also for
    ncurses programs that need console
  * trace toggling (-t), knows when managed mode (-m) is used by
    traced process, it doesn't need to be specified
  * Resolver -s/--sysroot option renamed to -r/--root and fixed to
    work also outside Sratchbox. Give error if binary referenced
    in trace isn't found
  * Support resolver --root option in rtrace-graphs-* scripts
  * Post-processor allows reading of binary traces from different
    architecture if endianess and pointer sizes match
  * Collecting heap information for allocmap in the memory module
    is disabled unless sp-rtrace is run with SP_RTRACE_MALLINFO
    environment variable set (because it slows down tracing
    and it's mostly obsoleted by pagemap module/tool)
  * Large number of missing functions added to the file module,
    more info for sockets (extracted from bind/connect calls),
    and some corner case issues fixed in the module
  * More readable & consistent function arguments (for callgraphs),
    all FDs are decimals and hex numbers are prefixed with 0x
  * Callgraph includes process name etc to callgraph, --include-only
    option acts on traced functions too
  * rtrace-rename can rename trace files based on the traced binary
    name listed in the trace header
  * New rtrace-function-address and rtrace-alloc-sizes helper scripts
  * sp-rtrace module API change and code refactoring
    - exits with error if resolving of any of the functions
      that module overloads fails
  * Large code reductions in modules by grouping similar trace
    functions and using common helpers for printing their trace data
  * Large number of extra compiler warnings enabled and fixed,
    fixes to error handling
  * Fix test-suite tests and it on certain errors killing whole
    desktop session

sp-rtrace (1.9), 20 Mar 2012:
  * Fixes for 64-bit hosts
  * rtrace-graphs-overview fix for (Ubuntu) Dash shell printf
  * sp-rtrace-resolve --sysroot option for cross-architecture resolving
    (e.g. 32-bit ARM on 32-bit x86, but not 32-bit x86 vs. 64-bit x86)
  * Libunwind support simplification and backtracing error handling fix
  * Support parallel sp-rtrace installations in different locations
  * Post-processing option for filtering allocs which backtraces contains
    given function (address range)
  * Pagemap improvements:
    - Fix pagemap file generation race condition, add PID prefix
      to all extra files generated by sp-rtrace
    - Show also anonymous mappings with rw data
    - Fix address filtering
  * Fix callgraph max alloc size filtering
  * Documentation updates

sp-rtrace (1.8.6), 29 Nov 2011:
  * Add SVG output support to timeline tool.
  * Fix double const in header "sp_rtrace_formatter.h".

sp-rtrace (1.8.5), 25 Oct 2011:
  * Force ELF resolving mode for sp-rtrace-postproc "-r" option
  * In rtrace-graphs-* helper scripts do callgraph symbol resolving
    using debug symbols instead of ELF symbol table  (debug symbols are
    much slower & memory hungry, but can give much better results)
  * Fix, convert callgraph to SVG (not PS) in rtrace-graphs-function

sp-rtrace (1.8.4), 13 Oct 2011:
  * Fix corrupted log file name when `-r' option is used.

sp-rtrace (1.8.3), 10 Oct 2011:
  * Fix `sp-rtrace-pagemap --help-pages' crash.

sp-rtrace (1.8.2), 23 Sep 2011:
  * Fix use of incorrect options in inline help examples.

sp-rtrace (1.8.1), 23 Aug 2011:
  * Add --quiet option suppressing warning messages to sp-rtrace,
    sp-rtrace-postproc, sp-rtrace-resolve.
  * Add symbolic signal name support for -S option.

sp-rtrace (1.8), 3 Aug 2011:
  * The option `-p' has been changed to `-e' to match functracer option names.
  * Audit module has been removed (`-a' option). sp-rtrace cannot track (even
    exported) function calls well enough due to limitations of the linker
    LD_AUDIT mechanism. Functracer can be used for the same purpose.

sp-rtrace (1.7), 30 Jun 2011:
  * Swap size and type fields in binary protocol to fix crashes.

sp-rtrace (1.6.1), 16 Jun 2011:
  * Fix bfd symbol resolving issues: If sp-rtrace backtraces go through
    certain kind of method/function calls where the call argument is a
    temporary object that gets constructed & destructed during argument
    handling, sp-rtrace-resolve resolves to destructor of that temporary
    object instead of the function/method call on which line it was used.
  * Calculate toggle signal during options parsing: the toggle signal was
    calculated only when sp-trace was used in toggle mode. This caused
    interrupting sp-rtrace with ctrl+c to send the default toggle signal even
    if custom signal was specified.
  * Write pagemap files into start directory if not specified otherwise.

sp-rtrace (1.6), 1 Jun 2011:
  * Improve SIGINT handling: tracing can now be stopped simply by aborting
    sp-rtrace with ctrl+c. If the tracing was enabled from the start (-s
    option), then the target process will be stopped after the data has been
    transferred and pipe closed. Otherwise sp-rtrace collects the data, but
    does not stop the target process.
  * New sp-rtrace option --monitor: Report backtraces only for allocations
    having the specified resource size(s).

sp-rtrace (1.5.2), 24 May 2011:
  * sp-rtrace-timeline --filter-time now allows relative time values.
  * Fix incorrect close() in trace toggling path.

sp-rtrace (1.5.1), 9 May 2011:
  * Do not send toggle signal to a process that is not traced.

sp-rtrace (1.5), 28 Apr 2011:
  * Pagemap post-processing utility for memory fragmentation analysis
  * New --include/--exclude options to sp-rtrace-postproc (for pagemap)
  * Improvements to rtrace-calltree:
    - new "allocation count" callgraph type
    - new options for reducing node (text) sizes, enabled by default
  * sp-rtrace-timeline charts X-axis shows both alloc count & time
  * Speedup for memory allocation tracking for programs doing
    simultenous allocations from many threads

sp-rtrace (1.4.1), 4 Mar 2011:
  * Fix BFD resolving segfault (data freed too early)
  * Fix sp-rtrace-postproc crash with traces containing multiple
    resource types
  * Fix/update rtrace-calltree --trace-args option and rename it
    to --show-args.  Add --include-only-args option to do the same
    thing for callgraph arg nodes as --include-only does for
    function nodes
  * Fix shmposix trace function names (mmap2 & mmap64 instead of mmap)
  * Test suite has now tests for all modules

sp-rtrace (1.4), 16 Feb 2011:
  * Debug package, compiler option, x86 reliability and memory leak fixes
  * "origin" field added to text format header. 
  * HTML and histogram reports removed from rtrace-calltree. Former isn't
    really useful and latter functionality is now in sp-rtrace-timeline
  * Major rtrace-calltree speed improvement for large traces
  * Post-processing tools updated to accept audit traces where
    traced functions have C++ signatures
  * sp-rtrace-timeline --scalex option value is now in percentages
    and resource life-time timeline Y-axis is logarithmic
  * New module and post-processing tools to track which of the process.
    memory pages are dirty and whether they're zeroed.  Added trace file
    format support for references to additional data files
  * New module for tracing POSIX shared memory mappings
  * SYSV shared memory module reports "shmctl(...,IPC_RMID,...)" events
  * Documentation updates and MeeGo compatibility fixes

sp-rtrace (1.3), 10 Dec 2010:
  * C++ rewrite of rtrace-timeline to make it faster
  * Improved support for resource reference counting
  * Binary and ASCII trace file format changes for above
  * Added module generator script, module code template & examples
  * New modules for tracing QObject and Gobject create/reference/free
  * Renamed shmseg module to shmsysv (as it's in functracer)
  * Experimental user specified function tracing support and module
    based on dynamic linker LD_AUDIT framework
  * Put allocmap temp files to current dir, use faster options
    and better error handling in rtrace-allocmap
  * Support new Linux pipe2() function in sp-rtrace file module

sp-rtrace (1.2), 11 Nov 2010:
  * rtrace-timeline script rewrite:
    - total non-freed allocations timeline chart
    - allocation activity timeline chart
    - allocation life-time timeline chart
    - allocation count & size per alloc size histograms
    - possible to generate all charts at the same time
    - huge memory usage reduction
    - options for filtering allocations & deallocations based on
      allocation record, timestamp or size range and scaling chart
  * rtrace-graphs-overview script rewrite:
    - resource file includes information about filtering done on it
    - handle both binary and ascii files
    - input files need now to be specified
    - generate also (all) timeline charts
    - show the generated charts with xdg-open
  * rtrace-callgree updates:
    - ignore deallocation backtraces
    - option to filter allocations based on size range
    - updates to glib/qt function/method ignore shortcuts
  * Experimental support for using libunwind to collect backtraces
  * Binary and ASCII trace file format changes for above
  * Context API library changes needed by functracer
  * Post-processing speed and memory usage improvements
  * Force i486 architecture for x86 (Sbox). 
    (GCC version specific atomic ops issue)
  * Automake&libtool added to build-deps. 

sp-rtrace (1.1), 23 Sep 2010:
  * Function name resolving verifies libbfd provide information from
    the ELF symbol table to get rid of bogus information provided
    by BFD for inline/template methods.  This may also remove useful
    information, for that case one can ask resolving to use just BFD.
  * Fixes to tracing toggling and backtrace generation
  * Modules can trace activity done before process enters main()
  * New file module for tracing file descriptor increase & decrease
  * Backtraces for freed resources are optional (improves performance)
  * Backtrace is output in similar format to one used by Gdb
  * rtrace-calltree:
    - HTML report generation & pylint errors fixed
    - callgraphs handle resource freeing backtraces properly
    - more & updated --ignore-* convenience functions
    - option for seeing first function arguments (e.g. filename) as nodes
  * Preliminary unfreed allocs & allocation activity timeline charts

sp-rtrace (1.0), 29 Jun 2010:
  * Initial Release.

#
# This file is part of sp-rtrace package.
#
# Copyright (C) 2010 by Nokia Corporation
#
# Contact: Eero Tamminen <eero.tamminen@nokia.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU Lesser General Public License
# as published by the Free Software Foundation; either version 2 of
# the License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
#
# You should have received a copy of the GNU Lesser General Public
# License along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02r10-1301 USA
#


set src_dir "sp-rtrace.resolve"
set out_file "resolve_test_rdynamic"
set src_deps "$src_dir/resolve_test.c"
set src_opts "-O -rdynamic"

proc check_resolve_rdynamic { args } {
	spawn sp-rtrace -e memory -P-r -s -x $::bin_dir/$::out_file
	set index 0
	set rc 0
	expect {
		-re {(?n)^\t0x[0-9a-fA-F]+ \(([^\r\n]+)\)[\r\n]$} {
			if { ![regexp {^in (.+?)(?: at .*|)$} $expect_out(1,string) match name] } {
				fail "couldn't parse backtrace record: $expect_out(1,string)"
				set rc -1
			}
			set out_name [lindex $args $index]
			if { $out_name == "*"} {
				exp_close
			} else {
				if { $name != $out_name } {
					fail "expected function: $out_name, but got: $name"
					set rc -1
				}
				set index [expr $index + 1]
				exp_continue
			}
		}
	}
	exp_wait
	return $rc
}

proc test_resolve_rdynamic { args } {
	if { [check_resolve_rdynamic zero one two start *] == 0 } {
		pass "resolving with -rdynamic"
	}
}

set result [rt_compile $src_dir $out_file $src_deps $src_opts ""]
if { $result == "" } {
	rt_test test_resolve_rdynamic
} else {
	fail  "failed to compile $src_dir/$out_file.c:\n $result"
}


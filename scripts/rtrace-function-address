#!/bin/sh
#
# Rtrace helper script. This file is part of sp-rtrace.
#
# Copyright (C) 2012 by Nokia Corporation
#
# Contact: Eero Tamminen <eero.tamminen@nokia.com>
#
# This program is free software; you can redistribute it and/or
# modify it under the terms of the GNU General Public License 
# version 2 as published by the Free Software Foundation. 
#
# This program is distributed in the hope that it will be useful, but
# WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
# General Public License for more details.
# 
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 51 Franklin St, Fifth Floor, Boston, MA
# 02110-1301 USA
#
#

format="<path>:<address>+<size>"
usage ()
{
	echo
	echo "Scans given ELF object/library symbol table for address range"
	echo "of the specified function and provides corresponding value to"
	echo "to give for sp-rtrace-postproc --call-address option."
	echo
	echo "Usage: ${0##*/} <absolute path to object> <function>"
	echo
	echo "The result is given in '$format' format."
	echo
	if [ \! -z "$1" ]; then
		echo "ERROR: $1!"
		echo
	fi
	exit 1
}

get_address_range ()
{
	target=$1
	address=$(nm -SC  "$target" 2>&1)
	if [ $? -ne 0 ] || [ "$address" = "nm: $target: no symbols" ]; then
		address="" 
	fi
}

if [ $# -ne 2 ]; then
	usage "argument(s) missing"
fi
if [ \! -f $1 ]; then
	usage "file '$1' doesn't exist or isn't a regular file"
fi

if ! type nm >/dev/null 2>&1; then
    echo "ERROR: required 'nm' utility was not found from the path!"
    exit 1
fi

if type realpath >/dev/null 2>&1; then
	target=$(realpath $1)
else
	target=$1
fi
shift
func=$1

get_address_range $target
if [ -z "$address" ]; then
	get_address_range /usr/lib/debug$target
	if [ -z "$address" ]; then
		echo "Failed to get symbol table for $target" >&2 
		exit 1
	fi
fi

echo "Function '$func' address range ($format):"
echo $target:$(echo "$address" | grep "$func" | head -n1 | sed -r "s/([0-9a-f]+) ([0-9a-f]+) .*/\1+\2/" )

exit 0
